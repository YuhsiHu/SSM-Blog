<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuyanzhao.ssm.blog.mapper.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.liuyanzhao.ssm.blog.entity.Notice" >
    <id column="notice_id" property="noticeId" jdbcType="INTEGER" />
    <result column="notice_title" property="noticeTitle" jdbcType="VARCHAR" />
    <result column="notice_content" property="noticeContent" jdbcType="VARCHAR" />
    <result column="notice_create_time" property="noticeCreateTime" jdbcType="TIMESTAMP" />
    <result column="notice_update_time" property="noticeUpdateTime" jdbcType="TIMESTAMP" />
    <result column="notice_status" property="noticeStatus" jdbcType="INTEGER" />
    <result column="notice_order" property="noticeOrder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    notice_id, notice_title, notice_content, notice_create_time, notice_update_time, 
    notice_status, notice_order
  </sql>

  <sql id="tb">notice</sql>

  <select id="getNoticeById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from <include refid="tb"/>
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from <include refid="tb"/>
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.liuyanzhao.ssm.blog.entity.Notice" useGeneratedKeys="true" keyProperty="noticeId">
    insert into <include refid="tb"/>
    (notice_id, notice_title, notice_content,
      notice_create_time, notice_update_time, 
      notice_status, notice_order)
    values (#{noticeId,jdbcType=INTEGER}, #{noticeTitle,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR}, 
      #{noticeCreateTime,jdbcType=TIMESTAMP}, #{noticeUpdateTime,jdbcType=TIMESTAMP}, 
      #{noticeStatus,jdbcType=INTEGER}, #{noticeOrder,jdbcType=INTEGER})
  </insert>

  <update id="update" parameterType="com.liuyanzhao.ssm.blog.entity.Notice" >
    update <include refid="tb"/>
    <set >
      <if test="noticeTitle != null" > notice_title = #{noticeTitle,jdbcType=VARCHAR},</if>
      <if test="noticeContent != null" >notice_content = #{noticeContent,jdbcType=VARCHAR},</if>
      <if test="noticeCreateTime != null" >notice_create_time = #{noticeCreateTime,jdbcType=TIMESTAMP},</if>
      <if test="noticeUpdateTime != null" >notice_update_time = #{noticeUpdateTime,jdbcType=TIMESTAMP},</if>
      <if test="noticeStatus != null" >notice_status = #{noticeStatus,jdbcType=INTEGER},</if>
      <if test="noticeOrder != null" >notice_order = #{noticeOrder,jdbcType=INTEGER},</if>
    </set>
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.liuyanzhao.ssm.blog.entity.Notice" >
    update <include refid="tb"/>
    set notice_title = #{noticeTitle,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      notice_create_time = #{noticeCreateTime,jdbcType=TIMESTAMP},
      notice_update_time = #{noticeUpdateTime,jdbcType=TIMESTAMP},
      notice_status = #{noticeStatus,jdbcType=INTEGER},
      notice_order = #{noticeOrder,jdbcType=INTEGER}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>


  <select id="countNotice" resultType="Integer">
    SELECT COUNT(*) FROM <include refid="tb"/>
    <where>
      <if test="status!=null">
        menu_status=#{status}
      </if>
    </where>
  </select>

  <!--获取公告列表-->
  <select id="listNotice" resultType="com.liuyanzhao.ssm.blog.entity.Notice">
    SELECT
    <include refid="Base_Column_List"/>
    FROM  <include refid="tb"/>
    <where>
      <if test="status!=null">
        notice_status=#{status}
      </if>
    </where>
    ORDER BY notice_status ASC, notice_order DESC, notice_id ASC
  </select>



</mapper>